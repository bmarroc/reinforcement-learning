#!/usr/bin/env python

"""Class for plotting the value function.
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import MaxNLocator
from mpl_toolkits.axes_grid1 import make_axes_locatable
from IPython import display
import time

class Manager:
    def __init__(self):          
        self.probabilities = np.array([
            [[0.1317988 , 0.16097941, 0.1317988 , 0.10790773, 0.08834737,
              0.07233271, 0.05922102, 0.04848607, 0.03969703, 0.03250118,
              0.12692988],
             [0.10088238, 0.12321802, 0.14459768, 0.11838657, 0.09692673,
              0.07935689, 0.06497193, 0.05319451, 0.04355199, 0.03565735,
              0.13925595],
             [0.07884745, 0.09630449, 0.11762657, 0.13262359, 0.10858301,
              0.08890025, 0.07278537, 0.05959162, 0.04878949, 0.03994546,
              0.1560027 ],
             [0.06257555, 0.07642995, 0.09335175, 0.11402009, 0.12351649,
              0.10112675, 0.08279558, 0.06778729, 0.05549954, 0.04543918,
              0.17745783],
             [0.05024298, 0.06136692, 0.07495372, 0.09154868, 0.11181781,
              0.11638119, 0.09528486, 0.07801264, 0.06387135, 0.05229344,
              0.20422641],
             [0.0407115, 0.04972511, 0.06073439, 0.07418115, 0.09060506,
              0.11066527, 0.11066527, 0.09060506, 0.07418115, 0.06073439,
              0.23719165],
             [0.03323363, 0.04059165, 0.04957875, 0.06055563, 0.07396281,
              0.09033838, 0.11033954, 0.10601307, 0.08679616, 0.07106269,
              0.27752769],
             [0.02729837, 0.03334231, 0.04072439, 0.04974088, 0.06075364,
              0.07420467, 0.09063379, 0.11070036, 0.10218931, 0.08366553,
              0.32674675],
             [0.02254453, 0.02753596, 0.0336325 , 0.04107883, 0.05017379,
              0.06128241, 0.0748505 , 0.09142261, 0.11166383, 0.09903693,
              0.38677811],
             [0.01870991, 0.02285233, 0.0279119 , 0.03409167, 0.04163966,
              0.0508588 , 0.06211908, 0.07587241, 0.09267078, 0.11318834,
              0.46008512],
             [0.0155998 , 0.01905363, 0.02327217, 0.02842469, 0.03471799,
              0.04240465, 0.05179316, 0.06326031, 0.07726631, 0.09437329,
              0.549834  ]],

           [[0.14366875, 0.15877852, 0.12999686, 0.10643242, 0.0871395 ,
             0.07134379, 0.05841135, 0.04782317, 0.0391543 , 0.03205683,
             0.12519451],
            [0.10892503, 0.13304134, 0.14126816, 0.11566058, 0.09469488,
             0.07752961, 0.06347587, 0.05196965, 0.04254915, 0.0348363 ,
             0.13604943],
            [0.08453687, 0.10325356, 0.12611419, 0.12866186, 0.10533942,
             0.08624462, 0.07061113, 0.0578115 , 0.04733205, 0.03875221,
             0.15134259],
            [0.06672593, 0.08149924, 0.0995434 , 0.12158258, 0.11917508,
             0.0975723 , 0.07988545, 0.06540467, 0.05354882, 0.04384206,
             0.17122047],
            [0.05333966, 0.06514921, 0.07957342, 0.0971912 , 0.1187096 ,
             0.11179649, 0.09153122, 0.07493943, 0.06135521, 0.0502334 ,
             0.19618116],
            [0.04306106, 0.05259491, 0.06423956, 0.07846238, 0.09583417,
             0.11705212, 0.10591313, 0.08671434, 0.0709957 , 0.05812636,
             0.22700627],
            [0.03503886, 0.04279657, 0.05227185, 0.06384498, 0.07798044,
             0.09524552, 0.11633314, 0.10113518, 0.08280248, 0.06779294,
             0.26475804],
            [0.02869829, 0.03505217, 0.04281282, 0.05229169, 0.06386922,
             0.07801004, 0.09528167, 0.1163773 , 0.09720649, 0.07958594,
             0.31081437],
            [0.02369225, 0.02893778, 0.03534468, 0.04317009, 0.05272807,
             0.06440221, 0.07866104, 0.09607681, 0.11502483, 0.09417436,
             0.36778788],
            [0.0197024 , 0.02406458, 0.02939253, 0.03590012, 0.04384851,
             0.05355669, 0.06541429, 0.07989719, 0.09758665, 0.11225137,
             0.43838567],
            [0.0164611 , 0.02010564, 0.02455708, 0.02999409, 0.03663486,
             0.04474592, 0.05465279, 0.06675307, 0.08153238, 0.09958388,
             0.52497919]],

           [[0.15641513, 0.15641512, 0.12806187, 0.10484819, 0.08584244,
             0.07028184, 0.05754191, 0.04711133, 0.03857149, 0.03157967,
             0.12333101],
            [0.11739337, 0.14338459, 0.1377624 , 0.11279032, 0.0923449 ,
             0.07560561, 0.06190064, 0.05067996, 0.04149324, 0.03397179,
             0.13267318],
            [0.09044187, 0.11046595, 0.13492342, 0.12455001, 0.10197293,
             0.08348837, 0.0683545 , 0.05596392, 0.04581939, 0.03751374,
             0.1465059 ],
            [0.07098611, 0.08670263, 0.10589883, 0.12934512, 0.11471883,
             0.09392382, 0.07689833, 0.06295903, 0.05154649, 0.0422027 ,
             0.16481811],
            [0.05649004, 0.06899709, 0.08427324, 0.10293157, 0.1257209 ,
             0.10713228, 0.0877125 , 0.07181292, 0.05879544, 0.04813764,
             0.18799638],
            [0.04543367, 0.0554928 , 0.06777905, 0.08278552, 0.10111447,
             0.12350149, 0.10111447, 0.08278552, 0.06777905, 0.0554928 ,
             0.21672116],
            [0.0370277 , 0.04522573, 0.05523883, 0.06746886, 0.08240665,
             0.10065172, 0.11811588, 0.0967051 , 0.07917544, 0.06482337,
             0.25316072],
            [0.03037979, 0.03710596, 0.04532133, 0.05535559, 0.06761147,
             0.08258084, 0.10086447, 0.11372437, 0.09310964, 0.07623172,
             0.29771482],
            [0.02506871, 0.03061899, 0.03739812, 0.04567817, 0.05579144,
             0.06814382, 0.08323106, 0.10165866, 0.11012549, 0.09016313,
             0.35212241],
            [0.0207919 , 0.02539529, 0.03101787, 0.03788531, 0.04627323,
             0.05651825, 0.06903154, 0.08431532, 0.10298296, 0.10718578,
             0.41860255],
            [0.01732672, 0.0211629 , 0.02584843, 0.03157134, 0.03856132,
             0.04709891, 0.05752673, 0.07026331, 0.0858198 , 0.10482054,
             0.5       ]],

           [[0.17006776, 0.15388369, 0.12598931, 0.10315132, 0.08445316,
             0.0691444 , 0.05661064, 0.04634888, 0.03794725, 0.03106858,
             0.12133501],
            [0.12627646, 0.15423441, 0.13408495, 0.10977948, 0.08987983,
             0.07358738, 0.06024825, 0.0493271 , 0.04038561, 0.03306494,
             0.12913159],
            [0.09654384, 0.1179189 , 0.14402647, 0.12030102, 0.09849414,
             0.08064018, 0.0660226 , 0.05405473, 0.04425627, 0.03623397,
             0.14150788],
            [0.07554374, 0.09226936, 0.11269805, 0.13492406, 0.11046647,
             0.0904423 , 0.07404789, 0.06062529, 0.04963579, 0.04063835,
             0.1587087 ],
            [0.06014464, 0.07346083, 0.08972526, 0.10959068, 0.12605929,
             0.10320862, 0.08450007, 0.0691828 , 0.05664209, 0.04637462,
             0.1811111 ],
            [0.04841648, 0.05913603, 0.07222891, 0.0882206 , 0.10775288,
             0.11908535, 0.09749884, 0.0798253 , 0.06535542, 0.0535085 ,
             0.20897169],
            [0.03931745, 0.04802244, 0.05865475, 0.07164107, 0.0875026 ,
             0.10687592, 0.11348475, 0.09291346, 0.07607111, 0.06228175,
             0.2432347 ],
            [0.03215707, 0.03927673, 0.04797271, 0.058594  , 0.07156687,
             0.08741198, 0.10676523, 0.10892203, 0.08917781, 0.07301262,
             0.28514295],
            [0.02645966, 0.03231791, 0.03947318, 0.04821266, 0.05888707,
             0.07192483, 0.08784919, 0.10729924, 0.10517457, 0.08610966,
             0.33629203],
            [0.02188703, 0.02673288, 0.03265161, 0.03988076, 0.04871047,
             0.05949511, 0.07266749, 0.08875627, 0.10840715, 0.10209401,
             0.39871722],
            [0.01819235, 0.02222017, 0.02713977, 0.03314859, 0.04048778,
             0.04945189, 0.06040067, 0.07377355, 0.09010722, 0.1100572 ,
             0.47502081]]])
        
        self.rewards = np.array([
            [ 3.19126834,  3.14763767,  3.10078551,  3.05060212],
            [ 4.44777617,  4.38104773,  4.31078747,  4.23708619],
            [ 5.7319493 ,  5.65429719,  5.57370263,  5.49041996],
            [ 7.02065291,  6.94074499,  6.85872323,  6.77703977],
            [ 8.29526166,  8.22033333,  8.14410558,  8.06745563],
            [ 9.53840862,  9.475328  ,  9.41162977,  9.33945614],
            [10.73211367, 10.68805269, 10.63730909, 10.57583481],
            [11.85641699, 11.83938441, 11.80176819, 11.75838968],
            [12.88810928, 12.90029213, 12.88354492, 12.86662139],
            [13.79930349, 13.83773464, 13.85704513, 13.8764554 ],
            [ 7.88895178,  7.95643725,  8.02426043,  8.09208361]])
        
    def plot(self, V, pi):
        plt.rc('font', size=30)  
        plt.rc('axes', titlesize=25)  
        plt.rc('axes', labelsize=25)  
        plt.rc('xtick', labelsize=17)  
        plt.rc('ytick', labelsize=17)  
        plt.rc('legend', fontsize=20)  
        plt.rc('figure', titlesize=30)
        plt.tight_layout()

        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12.5, 5))
        ax1.axis('on')
        ax1.cla()
        states = np.arange(V.shape[0])
        ax1.bar(states, V, edgecolor='none')
        ax1.set_xlabel('State')
        ax1.set_ylabel('Value', rotation='horizontal', ha='right')
        ax1.set_title('Value Function')
        ax1.xaxis.set_major_locator(MaxNLocator(integer=True, nbins=6))
        ax1.yaxis.grid()
        ax1.set_ylim(bottom=V.min())

        ax2.axis('on')
        ax2.cla()
        im = ax2.imshow(pi.T, cmap='Greys', vmin=0, vmax=1, aspect='auto')
        ax2.invert_yaxis()
        ax2.set_xlabel('State')
        ax2.set_ylabel('Action', rotation='horizontal', ha='right')
        ax2.set_title('Policy')
        start, end = ax2.get_xlim()
        ax2.xaxis.set_ticks(np.arange(start, end), minor=True)
        ax2.xaxis.set_major_locator(MaxNLocator(integer=True, nbins=6))
        ax2.yaxis.set_major_locator(MaxNLocator(integer=True, nbins=6))
        start, end = ax2.get_ylim()
        ax2.yaxis.set_ticks(np.arange(start, end), minor=True)
        ax2.grid(which='minor')
        divider = make_axes_locatable(ax2)
        cax = divider.append_axes('right', size='5%', pad=0.20)
        cbar = fig.colorbar(im, cax=cax, orientation='vertical')
        cbar.set_label('Probability', rotation=0, ha='left')
        fig.subplots_adjust(wspace=0.5)
        display.clear_output(wait=True)
        display.display(fig)
        time.sleep(0.001)
        plt.close()